//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedicalStoreClient.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    using System.Data;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicine", Namespace="http://schemas.datacontract.org/2004/07/MedicalStore")]
    [System.SerializableAttribute()]
    public partial class Medicine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicineName {
            get {
                return this.MedicineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicineNameField, value) != true)) {
                    this.MedicineNameField = value;
                    this.RaisePropertyChanged("MedicineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IMedicalSystemService")]
    public interface IMedicalSystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicalSystemService/viewMedicineData", ReplyAction="http://tempuri.org/IMedicalSystemService/viewMedicineDataResponse")]
        System.Data.DataSet viewMedicineData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicalSystemService/viewMedicineData", ReplyAction="http://tempuri.org/IMedicalSystemService/viewMedicineDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> viewMedicineDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicalSystemService/addMedicineData", ReplyAction="http://tempuri.org/IMedicalSystemService/addMedicineDataResponse")]
        string addMedicineData(MedicalStoreClient.ServiceReference2.Medicine m);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicalSystemService/addMedicineData", ReplyAction="http://tempuri.org/IMedicalSystemService/addMedicineDataResponse")]
        System.Threading.Tasks.Task<string> addMedicineDataAsync(MedicalStoreClient.ServiceReference2.Medicine m);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicalSystemServiceChannel : MedicalStoreClient.ServiceReference2.IMedicalSystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicalSystemServiceClient : System.ServiceModel.ClientBase<MedicalStoreClient.ServiceReference2.IMedicalSystemService>, MedicalStoreClient.ServiceReference2.IMedicalSystemService {
        
        public MedicalSystemServiceClient() {
        }
        
        public MedicalSystemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicalSystemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicalSystemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicalSystemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet viewMedicineData() {
            return base.Channel.viewMedicineData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> viewMedicineDataAsync() {
            return base.Channel.viewMedicineDataAsync();
        }
        
        public string addMedicineData(MedicalStoreClient.ServiceReference2.Medicine m) {
            return base.Channel.addMedicineData(m);
        }
        
        public System.Threading.Tasks.Task<string> addMedicineDataAsync(MedicalStoreClient.ServiceReference2.Medicine m) {
            return base.Channel.addMedicineDataAsync(m);
        }

    }
}
